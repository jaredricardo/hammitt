<style>
    /* 
    
        Jared new filters added for Mint's design 
    
        Tried to place this CSS in other files but the load delay was causing layout shift. This should ideally
        be adde to a global CSS file that loads before the page content.
    
    */

    minty-fresh-filters {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding: 2rem 0;
    }

    minty-fresh-filters ul {
        padding: 0;
        margin: 0;
        display: flex;
        flex-direction: row;
        gap: 40px;
    }

    minty-fresh-filters ul li {
        list-style: none;
    }

    minty-fresh-filters button {
        background-color: transparent;
        border: 0;
        cursor: pointer;
    }

    minty-fresh-filters .filter-actions-container {
        display: flex;
        align-items: center;
        gap: 20px;
    }

    minty-fresh-filters #toggle-grid {
        display: flex;
        gap: 8px;
    }

    minty-fresh-filters #toggle-grid .grid-view-svg {
        height: 14px;
        width: 14px;
    }

    minty-fresh-filters #toggle-grid .collection-view {
        display: block;
        height: 14px;
        width: 14px;
    }

    minty-fresh-filters #toggle-grid.collection-view .grid-view-svg rect {
        fill: #D8D8D8;
    }

    minty-fresh-filters #toggle-grid.grid-view .grid-view-svg rect {
        fill: black;
    }

    minty-fresh-filters #toggle-grid.collection-view .collection-view {
        background-color: black;
    }

    minty-fresh-filters #toggle-grid.grid-view .collection-view{
        background-color: #D8D8D8;
    }

    minty-fresh-filters li a {
        text-decoration: none;
        color: #626262;
        text-transform: uppercase;
    }
    minty-fresh-filters li a.on-collection {
        text-decoration: underline;
        color: black;
    }

    /* Collection product card state when grid view is toggle on */

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer {
        /* for testing */
        /* background-color: rgb(249, 192, 192); */
    }

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .card__badge,
    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .quick-add__wrapper{
        display: none;
    }

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .card__information {

    }

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .card__heading,
    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .price,
    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .card__seo-text {
        color: transparent;
    }

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .card--standard > .card__content {
        position: absolute;
        top: 0;
        color: transparent;
        height: 100%;
    }

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .product-card {
        padding-bottom: 0;
    }

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #product-grid {
        display: grid;
        column-gap: 4px; 
        row-gap: 4px;
        grid-template-columns: repeat(6, 1fr);
        min-height: auto;
    }

    main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #ProductGridContainer .grid__item {
        width: 100%;
        height: 100%;
        max-width: none;
    }

    minty-fresh-filters minty-fresh-filter-drawer,
    minty-fresh-filters minty-fresh-sort-drawer {
        background: white;
        height: 100vh;
        position: fixed;
        top: 0;
        right: -100%;
        overflow-y: auto;
        width: 390px;
        box-shadow: -10px 0 20px rgba(0, 0, 0, 0.1);
        transition: 0.3s ease-in-out;
    }

    minty-fresh-filters.filter-drawer-open minty-fresh-filter-drawer,
    minty-fresh-filters.sort-drawer-open minty-fresh-sort-drawer {
        right: 0;
    }

    minty-fresh-filters minty-fresh-filter-drawer .top-area,
    minty-fresh-filters minty-fresh-filter-drawer .filter-area,
    minty-fresh-filters minty-fresh-filter-drawer .apply-area {
        font-size: 16px;
        font-weight: 400;
        font-family: Sofia Pro;
    }

    minty-fresh-filters minty-fresh-filter-drawer .apply-area {
        position: fixed;
        bottom: 0;
        width: 100%;
        z-index: 10;
        background-color: white;
        display: flex;
        flex-direction: column;
    }

    minty-fresh-filters minty-fresh-filter-drawer .top-area,
    minty-fresh-filters minty-fresh-filter-drawer .apply-area {
        padding: 1.5rem;
    }

    minty-fresh-filters minty-fresh-filter-drawer .filter-area {
        padding: 1.5rem 0 0 1.5rem;
    }

    minty-fresh-filters minty-fresh-filter-drawer .top-area {
        border-bottom: 1.5px solid black;
        display: flex;
        justify-content: space-between;
    }

    minty-fresh-filters minty-fresh-filter-drawer .top-area svg {
        width: 14px;
        height: 14px;
    }

    minty-fresh-filters minty-fresh-filter-drawer .top-area button {
        padding: 5px;
    }

    minty-fresh-filters minty-fresh-filter-drawer .filter-area {
        display: flex;
        flex-direction: column;
    }

    minty-fresh-filters minty-fresh-filter-drawer .filter-area .label {
        margin-bottom: 0.5rem;
    }
    minty-fresh-filter-input {
        display: flex;  
        align-items: center;
        margin-bottom: 0.5rem;  
        gap: 1rem;
    }

    minty-fresh-filter-input input {
        width: 15px !important;
        height: 15px;
        margin: 0 !important;
        accent-color: black;
    }

    minty-fresh-filter-input .color-box {
        background-color: lightskyblue;
        width: 15px;
        height: 15px;
        border-radius: 50px;
    }

    @media screen and (max-width: 1007px) {
        main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #product-grid {
            grid-template-columns: repeat(5, 1fr);
        }
    }

    @media screen and (max-width: 768px) {
        main:has(minty-fresh-filters):has(#toggle-grid.grid-view) #product-grid {
            grid-template-columns: repeat(4, 1fr);
            column-gap: 2px; 
            row-gap: 2px;
        }
    }

</style>

{% liquid 

    assign has_collection_links = false
    assign results = collection
    
    assign filter_blocks = blocks | where: "type", "collection-filter-link"

    if filter_blocks
        assign has_collection_links = true
    endif

-%}

<minty-fresh-filters>

    <minty-fresh-filter-drawer>
       <div class="top-area">
        Filter <span id="active-filters"></span>
        <button id="close-filter-drawer">
            {% render 'icon-close' %}
        </button>
       </div>
        <div class="filters-area">
            {% for filter in results.filters %}
                {%- assign total_active_values = total_active_values | plus: filter.active_values.size -%}
                    <div class="filter-area">
                        <span class="label">{{ filter.label | escape | replace: 'Product type', 'Style' }}</span>
                        {% case filter.type %}
                            {% when 'list' %}
                                {% for value in filter.values %}
                                    <minty-fresh-filter-input>
                                        <input type="checkbox" {% if value.active %} checked {% endif %}>
                                        <span class="color-box" data-value="{{ value.value }}"></span>
                                        <div>
                                            <span class="color-swatch">{{ value.value }}</span>
                                            <span class="available-options">({{ value.count }})</span>
                                        </div>
                                    </minty-fresh-filter-input>
                                {% endfor %}
                            {% when 'price_range'%}
                        {% endcase %}
                    </div>
            {% endfor %}
        </div>
        <div class="apply-area">
            <button id="apply">Apply</button>
            <button id="apply">Reset</button>
        </div>
    </minty-fresh-filter-drawer>

    <minty-fresh-sort-drawer>
        sort drawer
    </minty-fresh-sort-drawer>
    {% if has_collection_links %}
        <ul>
            {% for block in filter_blocks %}
                {% assign on_collection = false %}
                {% assign index_collection_handle = block.settings.collection | handle %}

                {% if collection.handle == index_collection_handle %}
                    {% assign on_collection = true %}
                {% endif %}

                <li>
                    <a href="{{ block.settings.collection.url }}" {% if on_collection %} class="on-collection" {% endif %}>
                        {% if block.settings.title != blank %}
                            {{ block.settings.title | strip }}
                        {% else %}
                            {{ block.settings.collection.title | strip }}
                        {% endif %}
                    </a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}
    <div class="filter-actions-container" style="margin-left: auto;">
        <button id="toggle-grid" class="collection-view">
            {% render 'grid-view-svg' %}
            <span class="collection-view"></span>   
        </button>
        <button id="toggle-filter-drawer">
            Filter
        </button>
        <button id="toggle-sort-drawer">
            Sort
        </button>
    </div>
</minty-fresh-filters>