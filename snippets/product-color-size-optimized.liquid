<style>
  .product-colors {
    margin: 20px 0;
  }

  .product-colors ul {
    margin-block-start: 0em;
    padding-inline-start: 0em;
  }

  .product-colors ul li {
    list-style: none;
    display: inline-block;
    border: 1px solid white;
    margin-right: 2px;
  }
  .product-colors li:hover,
  .highlight {
    border: 1px solid #e0dfde;
  }

  .tooltip-block:hover:after {
    border: 1px solid #fc0;
    padding: 3px 6px;
    background: #fffea1;
    content: attr(data-title);
    position: absolute;
    right: -50px;
    top: 100px;
  }

  /* .size_title{font-weight: 600;text-transform: uppercase;margin-bottom: 10px;} */

  .swatch_image-a{
    display: flex;
  }
</style>

{% comment %} AB testing script and associated style {% endcomment %}

<style>

  /* opacity 0 until the script has run, or after 3000ms as a fallback */
  .product-colors.colorway-optimized {
    opacity: 0;
  }


  .custom-variant-list li.last-in-row {
    background-color: #FDF8F5;
  }

  .custom-variant-list li.last-in-row a {
    opacity: 0;
  }

  .custom-variant-list li.temp-opacity-0 {
    opacity: 0;
  }

  .pdp-hero-section .colorway-optimized .custom-variant-list {
    flex-wrap: wrap !important;
  }
  .show-or-hide-more-button-container {
    background-color: #FDF8F5 !important;
    text-color: black;
    font-size: 12px;
    font-weight: 400;
    cursor: pointer;
    min-height: 70px;
  }

  .show-or-hide-more-button-container.hidden {
    display: none !important;
  } 

  show-more-variant-button,
  show-less-variant-button {
    height: 100%;
    width: 100%;
    display: flex !important;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

</style>

<script>

  class ShowMoreVariantButton extends HTMLElement {
    constructor() {
      super()
      this.addEventListener('click', (event) => this.handleClick(event))
    }

    handleClick() {
      const parentLi = this.closest('li')
      const parentUl = this.closest('ul')
      const showLessbutton = parentUl.querySelector('show-less-variant-button')

      parentUl.querySelectorAll('li.hidden').forEach(item => {
        item.classList.remove('hidden')
        item.classList.add('past-last-in-row')
      })

      parentLi.classList.add('hidden') 
      showLessbutton.classList.remove('hidden')

    }
  }

  class ShowLessVariantButton extends HTMLElement {
    constructor() {
      super()
      this.addEventListener('click', (event) => this.handleClick(event))
    }

    handleClick() {
      const parentLi = this.closest('li')
      const parentUl = this.closest('ul')

      parentUl.querySelectorAll('li.past-last-in-row').forEach(item => {
        item.classList.add('hidden')
      })

      parentUl.querySelector('li:has(show-more-variant-button)').classList.remove('hidden')
      parentLi.classList.add('hidden') 
    }
  }

  customElements.define('show-more-variant-button', ShowMoreVariantButton)
  customElements.define('show-less-variant-button', ShowLessVariantButton)

  function initShowMoreAndLess(lis, lastLiIndex) {

    // remove old show more + less in case they exist and we are resizing the viewport
    const nearestUl = lis[0].closest('ul')
    const existingShowMoreOrLessButtons = nearestUl.querySelectorAll('.show-or-hide-more-button-container')  
    
    existingShowMoreOrLessButtons.forEach(button => {button.remove()})

    // insert the button
    const liButtonContainerShowMore = document.createElement('li')
    const liButtonContainerShowLess = document.createElement('li')
    const showMoreButton = document.createElement('show-more-variant-button')
    const showLessButton = document.createElement('show-less-variant-button')

    const nonButtonLis = Array.from(lis).filter(li => !li.classList.contains('show-or-hide-more-button-container'))

    const numHidden = nonButtonLis.length + 1 - lastLiIndex
    const parentUl = lis[0].parentElement
    
    liButtonContainerShowMore.classList.add('show-or-hide-more-button-container')
    liButtonContainerShowMore.appendChild(showMoreButton)
    showMoreButton.innerHTML = `+ ${numHidden} More`

    liButtonContainerShowLess.classList.add('show-or-hide-more-button-container')
    liButtonContainerShowLess.appendChild(showLessButton)
    liButtonContainerShowLess.classList.add('hidden')
    showLessButton.innerHTML = `Show Less`

    if(lis[lastLiIndex - 1].classList.contains('show-or-hide-more-button-container')) {
      parentUl.insertBefore(liButtonContainerShowMore, lis[lastLiIndex])
    } else {
      parentUl.insertBefore(liButtonContainerShowMore, lis[lastLiIndex - 1 ])   
    }

    // hide the remaining swatch images
    
    for (let j = lastLiIndex - 1; j < lis.length; j++) {
      const liAfterLastInRow = lis[j]
      liAfterLastInRow.classList.add('hidden')
    }

    // append after the rest are hidden
    parentUl.appendChild(liButtonContainerShowLess)

  }

  function markLastInRow(ulSelector, liSelector) {

    document.querySelector('.product-colors.colorway-optimized').style.opacity = '1'

    const ul = document.querySelector(ulSelector)

    if (!ul) return;
    const lis = ul.querySelectorAll(liSelector)

    let prevOffsetTop = null
    let lastLi = null

    for (let i = 0; i < lis.length; i++) {

      const li = lis[i]

      // If the offsetTop is different from the previous one, it means we are at a new row
      if (prevOffsetTop !== null && li.offsetTop !== prevOffsetTop) {
        // Previous li was the last in the row
        if (lastLi) {
          // Initialize show more functionality
          initShowMoreAndLess(lis, i)

          break
        }
      }
      prevOffsetTop = li.offsetTop
      lastLi = li
    }

  }

  window.addEventListener('DOMContentLoaded', () => {
    markLastInRow('.custom-variant-list.colors-list', 'li')
    markLastInRow('.custom-variant-list.small-list', 'li')
    markLastInRow('.custom-variant-list.medium-list', 'li')
    markLastInRow('.custom-variant-list.medium-short-strap-list', 'li')
    markLastInRow('.custom-variant-list.large-list', 'li')
    markLastInRow('.custom-variant-list.large-short-strap-list', 'li')
  })
  

  let resizeTimeout

  window.addEventListener('resize', () => {
    
    resetSwapperButtons()

    clearTimeout(resizeTimeout)
    resizeTimeout = setTimeout(() => {
      markLastInRow('.custom-variant-list.colors-list', 'li')
      markLastInRow('.custom-variant-list.small-list', 'li')
      markLastInRow('.custom-variant-list.medium-list', 'li')
      markLastInRow('.custom-variant-list.medium-short-strap-list', 'li')
      markLastInRow('.custom-variant-list.large-list', 'li')
      markLastInRow('.custom-variant-list.large-short-strap-list', 'li')
    }, 600)
  })


  function resetSwapperButtons() {
    const lis = document.querySelectorAll('.custom-variant-list.small-list li')
    const container = document.querySelector('.product-colors.colorway-optimized')

    // hide LI container so it dosnt look weird while resizing
    container.style.opacity = '0'

    // reset the LIs
    if(lis.length) {
      lis.forEach(li => {
        li.classList.remove('past-last-in-row')
        li.classList.remove('hidden')
      })
    }
  }

  document.addEventListener('re-initialize-show-more-pdp-variat-swapper', () => {
    resetSwapperButtons()
    markLastInRow('.custom-variant-list.colors-list', 'li')
    markLastInRow('.custom-variant-list.small-list', 'li')
    markLastInRow('.custom-variant-list.medium-list', 'li')
    markLastInRow('.custom-variant-list.medium-short-strap-list', 'li')
    markLastInRow('.custom-variant-list.large-list', 'li')
    markLastInRow('.custom-variant-list.large-short-strap-list', 'li')
  })

  window.setTimeout(() => {
    // fallback just in case
    const container = document.querySelector('.product-colors.colorway-optimized')
    if(container) {
      container.style.opacity = '1'
    }
  }, 3000)

</script>

{% liquid


  assign colorway_collection_handle = product.metafields.custom.colorway_collection.value.handle
  assign colorway_collection = collections[colorway_collection_handle].products

  assign isShareholder = false
  for tag in customer.tags
    if tag == 'shareholder'
      assign isShareholder = true
    endif
  endfor
%}

<div class="product-colors color_group color_group_block custom-variant-options colorway-optimized">
  {% comment %} color products {% endcomment %}
  <div class="variant-picker-group-wrapper">
    <div class="custom-variant-title">
      <span>{{ 'MORE COLORS:' | upcase }}</span> 
      {% comment %} {% if current_product_size == null %}
        <strong>{{ current_product_color }}</strong>
      {% endif %} {% endcomment %}
      {% if on_special_leather %}
        {% render 'special-care-tooltip' %}
      {% endif %}
    </div>
    <ul class="custom-variant-list colors-list">
      {% for product in colorway_collection %}

        {% liquid 

          assign isCurrent = false

          ####### new way of assigning product title

          assign product_type = product.metafields.custom.product_title_type
          assign product_color = product.metafields.custom.product_title_color_descriptor
          assign product_size = product.metafields.hammitt.size.value

          #######

          ## Only show products that are not small, medium, or large, if this metafield dosnt exist, then we are on a 
          ## color variant with no sizes.
          if product_size and product_size != 'One Size'
            continue
          endif
  
          # Only show exclusive product if customer has shareholder tag and seo hidden is 1 #
          if isShareholder == false and product.metafields.seo.hidden == 1
            continue 
          endif
  
          if product.metafields.custom.hide_product_all_customers == 1
            continue
          endif

          if product.handle == top_level_handle
            assign isCurrent = true
          endif
  
        -%}
  
        <li data-tooltip="{{ product_color }}" class="{% if isCurrent %} current-swatch {% endif %}">
          <div class="image customSwatch">
            <a 
              href="{{ product.url }}" 
              data-product-title="{{ product.title }}" 
              data-sku="{{ product.selected_or_first_available_variant.sku }}"
              data-product-img="{{ product.featured_image | img_url: 'medium' }}"
              aria-label="{{ product_color }}" 
              {% if isCurrent %}style="outline: 1px solid black;"{% endif %} 
              class="swatch_image-a"
              data-test-size="{{ product.images.size }}"
              >
              {% if product.featured_image %}
                {{ product.featured_image | image_url: width: 80 | image_url: height: 80 | image_tag: preload: true }}
              {% endif %}
            </a>
          </div>
        </li>
  
      {% endfor %}
    </ul>
  </div>

  {% comment %} Small products {% endcomment %}
  <div class="variant-picker-group-wrapper">
      <div class="custom-variant-title">
        <span>{{ 'Small:' | upcase }}</span> 
        {% if on_special_leather %}
          {% render 'special-care-tooltip' %}
        {% endif %}
      </div>
    <ul class="custom-variant-list small-list">
      {%- for product in colorway_collection -%}

        {% liquid 
        
          assign isCurrent = false

          ####### new way of assigning product title

          assign product_type = product.metafields.custom.product_title_type
          assign product_color = product.metafields.custom.product_title_color_descriptor
          assign product_size = product.metafields.hammitt.size.value
          assign formatted_size_string = null

          if product_size 

            assign formatted_size_string = product_size | downcase | strip

          endif

          #######
      
          unless formatted_size_string == "small"
            continue
          endunless

          # Only show exclusive product if customer has shareholder tag and seo hidden is 1 #
          if isShareholder == false and product.metafields.seo.hidden == 1
            continue 
          endif

          if product.metafields.custom.hide_product_all_customers == 1
            continue
          endif

          if product.handle == top_level_handle
            assign isCurrent = true
          endif

        -%}

          <li data-tooltip="{{ product_color }}" class="{% if isCurrent %} current-swatch {% endif %}">
            <div class="image customSwatch">
              <a 
                href="{{ product.url }}" 
                data-product-title="{{ product.title }}" 
                data-sku="{{ product.selected_or_first_available_variant.sku }}"
                data-product-img="{{ product.featured_image | img_url: 'medium' }}"
                aria-label="{{ product_color }}" {% if isCurrent %}style="outline: 1px solid black;"{% endif %} class="swatch_image-a">
                {% if product.featured_image %}
                  {{ product.featured_image | image_url: width: 80 | image_url: height: 80 | image_tag: preload: true }}
                {% endif %}
              </a>
            </div>
          </li>

      {% endfor %}
    </ul>
  </div>
  
  {% comment %} Medium products {% endcomment %}
  <div class="variant-picker-group-wrapper">
      <div class="custom-variant-title">
        <span>{{ 'Medium:' | upcase }}</span> 
        {% if on_special_leather %}
          {% render 'special-care-tooltip' %}
        {% endif %}
      </div>
    <ul class="custom-variant-list medium-list">
      {%- for product in colorway_collection -%}
     
        {% liquid 
        
          assign isCurrent = false

          ####### new way of assigning product title

          assign product_type = product.metafields.custom.product_title_type
          assign product_color = product.metafields.custom.product_title_color_descriptor
          assign product_size = product.metafields.hammitt.size.value
          assign formatted_size_string = null
          
          if product_size 

            assign formatted_size_string = product_size | downcase | strip

          endif

          #######
      
          unless formatted_size_string == "medium" 
            continue
          endunless

          if product.metafields.custom.product_title_size_subcategory == "Short Strap"
            continue
          endif
  
          # Only show exclusive product if customer has shareholder tag and seo hidden is 1 #
          if isShareholder == false and product.metafields.seo.hidden == 1
            continue 
          endif
  
          if product.metafields.custom.hide_product_all_customers == 1
            continue
          endif
  
          if product.handle == top_level_handle
            assign isCurrent = true
          endif
  
        -%}
  
          <li data-tooltip="{{ product_color }}" class="{% if isCurrent %} current-swatch {% endif %}" data-test-sub="{{ product.metafialds.custom.product_title_size_subcategory }}">
            <div class="image customSwatch">
              <a 
                {{ isCurrent }}
                href="{{ product.url }}" 
                data-product-title="{{ product.title }}" 
                data-sku="{{ product.selected_or_first_available_variant.sku }}"
                data-product-img="{{ product.featured_image | img_url: 'medium' }}"
                aria-label="{{ product_color }}" {% if isCurrent %}style="outline: 1px solid black;"{% endif %} class="swatch_image-a">
                {% if product.featured_image %}
                  {{ product.featured_image | image_url: width: 80 | image_url: height: 80 | image_tag: preload: true }}
                {% endif %}
              </a>
            </div>
          </li>
  
      {% endfor %}
    </ul>
  </div>
  
  <div class="variant-picker-group-wrapper">
    <div class="custom-variant-title">
      <span>{{ 'Medium Short Strap:' | upcase }}</span> 

      {% if on_special_leather %}
        {% render 'special-care-tooltip' %}
      {% endif %}
    </div>
    <ul class="custom-variant-list medium-short-strap-list">
      {%- for product in colorway_collection -%}
     
        {% liquid 
        
          assign isCurrent = false

          ####### new way of assigning product title

          assign product_type = product.metafields.custom.product_title_type
          assign product_color = product.metafields.custom.product_title_color_descriptor
          assign product_size = product.metafields.hammitt.size.value
          assign formatted_size_string = null
          
          if product_size 

            assign formatted_size_string = product_size | downcase | strip

          endif

          #######
      
          unless formatted_size_string == "medium" 
            continue   
          endunless

          if product.metafields.custom.product_title_size_subcategory != 'Short Strap'
            continue
          endif
  
          # Only show exclusive product if customer has shareholder tag and seo hidden is 1 #
          if isShareholder == false and product.metafields.seo.hidden == 1
            continue 
          endif
  
          if product.metafields.custom.hide_product_all_customers == 1
            continue
          endif
  
          if product.handle == top_level_handle
            assign isCurrent = true
          endif
  
        -%}
  
          <li data-tooltip="{{ product_color }}" class="{% if isCurrent %} current-swatch {% endif %}" data-test-sub="{{ product.metafialds.custom.product_title_size_subcategory }}">
            <div class="image customSwatch">
              <a 
                {{ isCurrent }}
                href="{{ product.url }}" 
                data-product-title="{{ product.title }}" 
                data-sku="{{ product.selected_or_first_available_variant.sku }}"
                data-product-img="{{ product.featured_image | img_url: 'medium' }}"
                aria-label="{{ product_color }}" {% if isCurrent %}style="outline: 1px solid black;"{% endif %} class="swatch_image-a">
                {% if product.featured_image %}
                  {{ product.featured_image | image_url: width: 80 | image_url: height: 80 | image_tag: preload: true }}
                {% endif %}
              </a>
            </div>
          </li>
  
      {% endfor %}
    </ul>
  </div>

  {% comment %} Large products {% endcomment %}
  <div class="variant-picker-group-wrapper">
      <div class="custom-variant-title">
        <span>{{ 'Large:' | upcase }}</span> 
        {% if on_special_leather %}
          {% render 'special-care-tooltip' %}
        {% endif %}
      </div>
    <ul class="custom-variant-list large-list">
      {%- for product in colorway_collection -%}
  
        {% liquid 
        
          assign isCurrent = false

          ####### new way of assigning product title

          assign product_type = product.metafields.custom.product_title_type
          assign product_color = product.metafields.custom.product_title_color_descriptor
          assign product_size = product.metafields.hammitt.size.value
          assign formatted_size_string = null
          
          if product_size 

            assign formatted_size_string = product_size | downcase | strip

          endif

          #######
      
          unless formatted_size_string == "large"
            continue
          endunless
  
          # Only show exclusive product if customer has shareholder tag and seo hidden is 1 #
          if isShareholder == false and product.metafields.seo.hidden == 1
            continue 
          endif
  
          if product.metafields.custom.hide_product_all_customers == 1
            continue
          endif
  
          if product.handle == top_level_handle
            assign isCurrent = true
          endif
  
        -%}
  
          <li data-tooltip="{{ product_color }}" class="{% if isCurrent %} current-swatch {% endif %}">
            <div class="image customSwatch">
              <a 
                {{ isCurrent }}
                href="{{ product.url }}" 
                data-product-title="{{ product.title }}" 
                data-sku="{{ product.selected_or_first_available_variant.sku }}"
                data-product-img="{{ product.featured_image | img_url: 'medium' }}"
                aria-label="{{ product_color }}" {% if isCurrent %}style="outline: 1px solid black;"{% endif %} class="swatch_image-a">
                {% if product.featured_image %}
                  {{ product.featured_image | image_url: width: 80 | image_url: height: 80 | image_tag: preload: true }}
                {% endif %}
              </a>
            </div>
          </li>
  
      {%- endfor -%}
    </ul>
  </div>
  {% comment %} Extra Large products {% endcomment %}
  <div class="variant-picker-group-wrapper">
      <div class="custom-variant-title">
        <span>{{ 'Extra Large:' | upcase }}</span> 
        {% if on_special_leather %}
          {% render 'special-care-tooltip' %}
        {% endif %}
      </div>
    <ul class="custom-variant-list extra-large-list">
      {%- for product in colorway_collection -%}
  
        {% liquid 
        
          assign isCurrent = false

          ####### new way of assigning product title

          assign product_type = product.metafields.custom.product_title_type
          assign product_color = product.metafields.custom.product_title_color_descriptor
          assign product_size = product.metafields.hammitt.size.value
          assign formatted_size_string = null
          
          if product_size 

            assign formatted_size_string = product_size | downcase | strip

          endif

          #######
      
          unless formatted_size_string == "extra large"
            continue
          endunless
  
          # Only show exclusive product if customer has shareholder tag and seo hidden is 1 #
          if isShareholder == false and product.metafields.seo.hidden == 1
            continue 
          endif
  
          if product.metafields.custom.hide_product_all_customers == 1
            continue
          endif
  
          if product.handle == top_level_handle
            assign isCurrent = true
          endif
  
        -%}
  
          <li data-tooltip="{{ product_color }}" class="{% if isCurrent %} current-swatch {% endif %}">
            <div class="image customSwatch">
              <a 
                {{ isCurrent }}
                href="{{ product.url }}" 
                data-product-title="{{ product.title }}" 
                data-sku="{{ product.selected_or_first_available_variant.sku }}"
                data-product-img="{{ product.featured_image | img_url: 'medium' }}"
                aria-label="{{ product_color }}" {% if isCurrent %}style="outline: 1px solid black;"{% endif %} class="swatch_image-a">
                {% if product.featured_image %}
                  {{ product.featured_image | image_url: width: 80 | image_url: height: 80 | image_tag: preload: true }}
                {% endif %}
              </a>
            </div>
          </li>
  
      {%- endfor -%}
    </ul>
  </div>
  
    <script class="hidden" type="application/json" id="data-product-variant-json">
      {
        "variant-data": {{ colorway_collection | json }}
      }
  </script>
</div>