<script src="https://assets.xgen.dev/sdk-core/releases/latest/sdk-core.umd.cjs"></script>
<script>

    window.addEventListener('DOMContentLoaded', async () => {

        const recentOrTrendingHeader = document.querySelector('.initial-search-modal-content .recent-or-trending-products h4')
        const recentOrTrendingContainer = document.querySelector('.initial-search-modal-content .recent-or-trending-products ul')
        const recentOrPopularHeader = document.querySelector('.initial-search-modal-content .recent-or-popular-searches h4')
        const recentOrPopularContainer = document.querySelector('.initial-search-modal-content .recent-or-popular-searches ul')
        let recentSearches = JSON.parse(localStorage.getItem('recentSearches'))
        const queryString = window.location.search
        const params = new URLSearchParams(queryString)
        const searchValue = params.get('q')

        if(recentOrTrendingContainer) {
            buildRecentlyViewedProductsInSearch(recentOrTrendingContainer)
        }    

        // search value means we are on a search results page
        if(searchValue) {
            if(recentSearches === null) {
                recentSearches = []
                recentSearches.push(searchValue)
                localStorage.setItem('recentSearches', JSON.stringify(recentSearches))
            } else if(!recentSearches.includes(searchValue)) {
                recentSearches.push(searchValue)
                localStorage.setItem('recentSearches', JSON.stringify(recentSearches))
            }
        } 


        if(recentOrPopularContainer) {
             console.log('??????!!')
            buildRecentlySearched(recentOrPopularContainer)
        }    


       



        // window.xg = new window.XGenSdkCore.XGenClient({
        //     key: 'c5930cf4b8c47ffb15253a21a13a0a54',
        //     secret: '5331b9792786c978024b2cd5336a18f4dd24ffe924576e38e0538535ef1fc88034ccd4c0c225de434700152bd22aa23eb5c05c057ce265d6e5b46c080295454a',
        //     clientId: '95649fa1480c4eb7efbfdeaff081cdac',
        //     trackerId: 'a0d9171b91b2403a9146d160bb69148c'
        // })

        // const results = await xg.search.getResults({
        //     query: 'backpack', 
        //     options: {
        //         collection: 'default', 
        //         deploymentId:''
        //     }
        // })

        // const results = await xg.recommend.getResultsById({elementId: '9165751025848'})

        // console.log(results)


    function getRecentlyViewedProductsCookie() {
        // taken and slightly modified from 'recently-viewed.js' RecentlyViewed class
        var re = new RegExp('_rv' + "=([^;]+)")
        var value = re.exec(document.cookie)
        var cookie = (value != null) ? unescape(value[1]) : false
        const json = cookie ? JSON.parse(cookie) : []
        return json
    }

    function buildRecentlyViewedProductsInSearch(targetContainer) {

        const recentlyViewedProducts = getRecentlyViewedProductsCookie()

        if(recentlyViewedProducts.length == 0) return

        recentOrTrendingHeader.innerText = 'Recently Viewed Products'

        recentOrTrendingContainer.querySelectorAll('li').forEach((li) =>{li.remove()})

        const reversed = recentlyViewedProducts.reverse()

        reversed.forEach((product, i) => {

            if(i > 3) return
            
            let formattedProductTitle = product.title

            if(product.product_title_type && product.product_title_color_descriptor) {
                formattedProductTitle = `${product.product_title_type} ${product.product_size}`
            } 

            const productCard = document.querySelector('[data-basic-card-template]').cloneNode(true)

            productCard.classList.remove('inactive')

            productCard.querySelector('.card-image img').src = product.featured_image
            productCard.querySelector('.card-image img').alt = product.title
            productCard.querySelector('.product-title').innerText = formattedProductTitle
            productCard.querySelector('.product-color').innerText = product.product_title_color_descriptor
            productCard.querySelector('a').href = product.handle

            targetContainer.appendChild(productCard)

        })
    }

    function buildRecentlySearched(targetContainer) {

        console.log('BUILDING RECENT SEARCHES')

        if(recentSearches == null) return

        recentOrPopularHeader.innerText = 'Recent Searches'

        recentOrPopularContainer.querySelectorAll('li').forEach((li) =>{li.remove()})

        const reversed = recentSearches.reverse()

        reversed.forEach((search, i) => {

            if(i > 3) return

            const searchItem = document.createElement('li')
            searchItem.innerHTML = `<a href="/search?q=${search}">${search}</a>`
            targetContainer.appendChild(searchItem)

        })
    }

})

</script>

<li data-basic-card-template class="basic-product-card-template--li inactive">
    <a href="">
        <div class="card-image">
            <img src="" alt="">
        </div>
        <div class="card-content">
            <h3 class="product-title"></h3>
            <h5 class="product-color"></h5>
        </div>
    </a>
</li>

